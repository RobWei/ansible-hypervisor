---
# Allgemeine Konfigurationen f√ºr alle Server
- name: create motd file
  template: src=motd.j2 dest=/etc/motd

- name: update .vimrc file
  template: src=vimrc.j2 dest=~/.vimrc

- name: update .bash_profile file
  template: src=bash_profile.j2 dest=~/.bash_profile

- name: update nameserver configuration (Debian)
  template: src=resolv.conf.j2 dest=/etc/resolv.conf
  when: "'nameservers' in hostvars[inventory_hostname] and ansible_distribution == 'Debian'"

- name: install resolvconf
  apt:
    pkg: "resolvconf"
    state: present

- name: update nameserver configuration (Ubuntu)
  template: src=resolv.conf.j2 dest=/etc/resolvconf/resolv.conf.d/tail
  when: "'nameservers' in hostvars[inventory_hostname] and ansible_distribution == 'Ubuntu'"
  notify:
    - reload resolv config

- name: Flush all handlers
  meta: flush_handlers

- name: add default repo
  #Freifunk- und Rollen-Repos erst in den jeweiligen Rollen
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb http://ftp.de.debian.org/debian/ {{ ansible_distribution_release }} main"
    - "deb http://ftp.de.debian.org/debian/ {{ ansible_distribution_release }}-updates main"
    - "deb http://security.debian.org/ {{ ansible_distribution_release }}/updates main"
  when: ansible_distribution == "Debian"

- name: install common packages
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: installed
  with_items:
    - software-properties-common
    - vim
    - wget
    - vnstat
    - tmux
    - pastebinit
    - htop
    - jnettop
    - iotop
    - tcpdump
    - screen
    - strace
    - socat
    - dnsutils
    - host
    - apt-transport-https
    - dwdiff
    - git
    - molly-guard
    - iperf
    - traceroute
    - ethtool
    - irqbalance

- name: install common packages (Debian != Buster specific)
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: installed
  when: ansible_distribution == "Debian" and ansible_distribution_release != "buster"
  with_items:
    - chkconfig

- name: add sshkeys for server
  authorized_key: 
    user: root 
    key: "{{ lookup('file', 'keyfiles/' + item + '.pub') }}"
  with_items: "{{ administrators }}"
  when: administrators

- locale_gen: name=de_DE.UTF-8 state=present

- name: Ensures htop config dir exists
  file: path=/root/.config/htop state=directory

- name: Configure htop
  template: src=htoprc.j2 dest=/root/.config/htop/htoprc

- name: Disable ssh authentication with password for all users
  lineinfile: dest=/etc/ssh/sshd_config regexp="^#?PasswordAuthentication " line="PasswordAuthentication no"
  notify:
    - reload sshd

- name: Permit root login only with pub-/priv-key auth
  lineinfile: dest=/etc/ssh/sshd_config regexp="^#?PermitRootLogin " line="PermitRootLogin without-password"
  notify:
    - reload sshd

- name: Let PAM Module (in general) anabled
  lineinfile: dest=/etc/ssh/sshd_config regexp="^#?UsePAM " line="UsePAM yes"
  notify:
    - reload sshd

- name: Disable PAM Auth
  lineinfile: dest=/etc/pam.d/sshd regexp="^auth " line="auth required pam_deny.so"
  notify:
    - reload sshd

- name: Disable ChallengeResponseAuthentication
  lineinfile: dest=/etc/ssh/sshd_config regexp="^#?ChallengeResponseAuthentication " line="ChallengeResponseAuthentication no"
  notify:
    - reload sshd

- name: remove unneeded rpc/nfc related packages
  apt:
    pkg: "{{ item }}"
    update_cache: yes
    state: absent
    purge: yes
  with_items:
    - rpcbind
    - nfs-kernel-server
    - nfs-common
    - portmap

